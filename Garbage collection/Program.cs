// Task 1
using Garbage_collection.Task_1;
using Garbage_collection.Task_2;

static void ForTest<T>(T obj) { }

Console.WriteLine("Task 1\n");
Play play = new("Один в поле, всё ещё волк", "Полное имя автора, не ваше дело", "Жанр - неизвестен", new DateTime(2344, 3, 25));
using(play)
{
    play.StartPlay();
}



//Задание 2
//Создайте класс Магазин
//Класс должен хранить такую информацию:

//Название магазина;
//Адрес магазина;
//Тип магазина:
//Продовольственный;
//Хозяйственный;
//Одежда;
//Обувь

//Реализуйте в классе методы и свойства, необходимые для функционирования класса.
//Класс должен реализовывать интерфейс IDisposable. Напишите код для тестирования функциональности класса.


//Задание 3
//Добавьте к первому заданию реализацию интерфейса IDisposable.
//Добавьте ко второму заданию реализацию деструктора.
//Напишите код для тестирования новых возможностей.

Console.WriteLine("\n\n Task 2");

Store store = new("Лукреция", "Где-то в Лондоне", "Холодное оружие");
using(store)
{
    store.Sales();
}


// НЕ НАПИСАЛ

//Задание 4. Управление памятью и поколениями сборки мусора
//Создайте класс MemoryAllocator, который выполняет следующие действия:
//Создает массив объектов (например, строк или массивов чисел) размером 1 млн элементов.
//Симулирует активное использование памяти, например, путем создания и удаления объектов

//Требования:
//Используйте методы класса System.GC, чтобы:
//Определить поколение созданных объектов (GC.GetGeneration).
//Вызвать сборщик мусора (GC.Collect) и проверить, переместились ли объекты в старшие поколения.
//Добавьте метод для явного освобождения ресурсов через Dispose и деструктор для проверки корректного освобождения памяти.

//Важно:
//Реализуйте подсчет времени выполнения операций с использованием класса Stopwatch, чтобы сравнить работу с памятью до и после сборки мусора.
//Напишите тесты, чтобы проверить поведение класса при разных объемах данных.